{"ast":null,"code":"import { put, delay, takeLatest, all, fork } from \"redux-saga/effects\";\n\nfunction* ageUpAsync() {\n  yield delay(2000);\n  yield put({\n    type: \"AGE_UP_ASYNC\",\n    value: 1\n  });\n}\n\nfunction* ageDownAsync() {\n  yield delay(2000);\n  yield put({\n    type: \"AGE_DOWN_ASYNC\",\n    value: 1\n  });\n}\n\nfunction* watchAgeUp() {\n  yield takeLatest('AGE_UP', ageUpAsync);\n}\n\nfunction* watchAgeDown() {\n  yield takeLatest('AGE_DOWN', ageDownAsync);\n}\n\nexport function* rootSaga() {\n  yield all([fork(watchAgeUp), // saga1 can also yield [ fork(actionOne), fork(actionTwo) ]\n  fork(watchAgeDown)]);\n}","map":{"version":3,"sources":["/home/suraj/Desktop/assignment/src/sagas/saga.js"],"names":["put","delay","takeLatest","all","fork","ageUpAsync","type","value","ageDownAsync","watchAgeUp","watchAgeDown","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,UAArB,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;;AAGA,UAAUC,UAAV,GAAsB;AAClB,QAAMJ,KAAK,CAAC,IAAD,CAAX;AACA,QAAMD,GAAG,CAAC;AAACM,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,KAAK,EAAC;AAA7B,GAAD,CAAT;AACH;;AAED,UAAUC,YAAV,GAAwB;AACpB,QAAMP,KAAK,CAAC,IAAD,CAAX;AACA,QAAMD,GAAG,CAAC;AAACM,IAAAA,IAAI,EAAE,gBAAP;AAAyBC,IAAAA,KAAK,EAAC;AAA/B,GAAD,CAAT;AACH;;AAEA,UAAUE,UAAV,GAAsB;AACnB,QAAMP,UAAU,CAAC,QAAD,EAAUG,UAAV,CAAhB;AACH;;AAED,UAAUK,YAAV,GAAwB;AACpB,QAAMR,UAAU,CAAC,UAAD,EAAYM,YAAZ,CAAhB;AACH;;AAGD,OAAO,UAAUG,QAAV,GAAsB;AACzB,QAAMR,GAAG,CAAC,CACNC,IAAI,CAACK,UAAD,CADE,EACY;AAClBL,EAAAA,IAAI,CAACM,YAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { put, delay, takeLatest, all, fork } from \"redux-saga/effects\";\n\n\nfunction* ageUpAsync(){\n    yield delay(2000);\n    yield put({type: \"AGE_UP_ASYNC\", value:1})\n}\n\nfunction* ageDownAsync(){\n    yield delay(2000);\n    yield put({type: \"AGE_DOWN_ASYNC\", value:1})\n}\n\n function* watchAgeUp(){\n    yield takeLatest('AGE_UP',ageUpAsync)\n}\n\nfunction* watchAgeDown(){\n    yield takeLatest('AGE_DOWN',ageDownAsync)\n}\n\n\nexport function* rootSaga () {\n    yield all([\n        fork(watchAgeUp), // saga1 can also yield [ fork(actionOne), fork(actionTwo) ]\n        fork(watchAgeDown),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}